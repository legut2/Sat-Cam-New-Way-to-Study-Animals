#!/bin/sh
### BEGIN INIT INFO
# Provides:          cwd_cam
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Run test_send_data_over_cell.py at boot time
# Description:       This script runs the test_send_data_over_cell.py Python script at boot time.
### END INIT INFO

# Path to the Python script and virtual environment
SCRIPT="/home/orangepi/Desktop/cell_cam.py"
VENV_PATH="/home/orangepi/Desktop/venv/bin/activate"
RUNAS=orangepi

PIDFILE=/var/run/cwd_cam.pid
LOGFILE=/var/log/cwd_cam.log

start() {
    if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE" 2>/dev/null); then
        echo 'Service already running' >&2
        return 1
    fi
    echo 'Starting serviceâ€¦' >&2
    # Ensure the log file exists and is writable
    touch "$LOGFILE"
    chown $RUNAS:$RUNAS "$LOGFILE"
    chmod 644 "$LOGFILE"

    local CMD="source \"$VENV_PATH\" && echo "orangepi" | sudo -S /home/orangepi/Desktop/venv/bin/python \"$SCRIPT\" &> \"$LOGFILE\" & echo \$!"
    echo "Executing command: $CMD" >&2
    su -c "$CMD" $RUNAS > "$PIDFILE"
    # Verify PID file contents
    echo "PID file contents: $(cat $PIDFILE)" >&2

    if [ $? -eq 0 ]; then
        echo 'Service started' >&2
    else
        echo 'Service failed to start' >&2
        return 1
    fi
}

stop() {
    if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE" 2>/dev/null); then
        echo 'Service not running' >&2
        return 1
    fi
    echo 'Stopping serviceâ€¦' >&2
    kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
    if [ $? -eq 0 ]; then
        echo 'Service stopped' >&2
    else
        echo 'Failed to stop service' >&2
        return 1
    fi
}

status() {
    if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE" 2>/dev/null); then
        echo 'Service running' >&2
        return 0
    else
        echo 'Service not running' >&2
        return 1
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

exit 0

